<h1 id="myapp-gruntfile-js">myApp/Gruntfile.js</h1>
<h3 id="purpose" permalink="purpose">Purpose</h3>
<p>Sails uses <a href="http://gruntjs.com" target="_blank">Grunt</a> for asset management. This file contains the entry point for the default asset pipeline in Sails; that is, the code that does stuff like compiling LESS stylesheets, minifying scripts for production, and precompiling and injecting client-side templates.</p>
<p>Sails&apos; integration with Grunt is fully customizable, but for most use cases, this file (<code>Gruntfile.js</code>) should remain unchanged.  Instead, install Grunt plugins or add your own custom logic as individual files in the <a href="./tasks"><code>tasks/</code></a> folder.</p>
<p>To learn more about working with static assets in Sails, check out the <a href="http://sailsjs.org/documentation/concepts/assets">conceptual documentation on assets</a>.  For a broader introduction to Grunt tasks in general, see <a href="http://gruntjs.com/configuring-tasks" target="_blank">Grunt&apos;s docs on configuring tasks</a>.</p>
<docmeta name="displayName" value="Gruntfile.js">

<div www-sjs-anatomy-boilerplate="">

<pre><code data-language="javascript">/**
 * Gruntfile
 *
 * This Node script is executed when you run `grunt` or `sails lift`.
 * Its purpose is to load the Grunt tasks in your project&apos;s `tasks`
 * folder, and allow you to add and remove tasks as you see fit.
 * For more information on how this works, check out the `README.md`
 * file that was generated in your `tasks` folder.
 *
 * WARNING:
 * Unless you know what you&apos;re doing, you shouldn&apos;t change this file.
 * Check out the `tasks` directory instead.
 */

module.exports = function(grunt) {


    // Load the include-all library in order to require all of our grunt
    // configurations and task registrations dynamically.
    var includeAll;
    try {
        includeAll = require(&apos;include-all&apos;);
    } catch (e0) {
        try {
            includeAll = require(&apos;sails/node_modules/include-all&apos;);
        }
        catch(e1) {
            console.error(&apos;Could not find `include-all` module.&apos;);
            console.error(&apos;Skipping grunt tasks...&apos;);
            console.error(&apos;To fix this, please run:&apos;);
            console.error(&apos;npm install include-all --save`&apos;);
            console.error();

            grunt.registerTask(&apos;default&apos;, []);
            return;
        }
    }


    /**
     * Loads Grunt configuration modules from the specified
     * relative path. These modules should export a function
     * that, when run, should either load/configure or register
     * a Grunt task.
     */
    function loadTasks(relPath) {
        return includeAll({
            dirname: require(&apos;path&apos;).resolve(__dirname, relPath),
            filter: /(.+)\.js$/
        }) || {};
    }

    /**
     * Invokes the function from a Grunt configuration module with
     * a single argument - the `grunt` object.
     */
    function invokeConfigFn(tasks) {
        for (var taskName in tasks) {
            if (tasks.hasOwnProperty(taskName)) {
                tasks[taskName](grunt);
            }
        }
    }




    // Load task functions
    var taskConfigurations = loadTasks(&apos;./tasks/config&apos;),
        registerDefinitions = loadTasks(&apos;./tasks/register&apos;);

    // (ensure that a default task exists)
    if (!registerDefinitions.default) {
        registerDefinitions.default = function (grunt) { grunt.registerTask(&apos;default&apos;, []); };
    }

    // Run task functions to configure Grunt.
    invokeConfigFn(taskConfigurations);
    invokeConfigFn(registerDefinitions);

};
</code></pre><!-- __LANG=%%__ -->
</div></docmeta>