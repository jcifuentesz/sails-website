<h1 id="myapp-config-locales-_readme">myApp/config/locales/_README</h1>
<docmeta name="displayName" value="_README">

<h1 id="internationalization-localization-settings">Internationalization / Localization Settings</h1>
<blockquote>
<p>Also see the official docs on internationalization/localization:
<a href="http://links.sailsjs.org/docs/config/locales" target="_blank">http://links.sailsjs.org/docs/config/locales</a></p>
</blockquote>
<h2 id="locales" permalink="locales">Locales</h2>
<p>All locale files live under <code>config/locales</code>. Here is where you can add translations
as JSON key-value pairs. The name of the file should match the language that you are supporting, which allows for automatic language detection based on request headers.</p>
<p>Here is an example locale stringfile for the Spanish language (<code>config/locales/es.json</code>):</p>
<pre><code data-language="json">{
    &quot;Hello!&quot;: &quot;Hola!&quot;,
    &quot;Hello %s, how are you today?&quot;: &quot;&#xBF;Hola %s, como estas?&quot;
}
</code></pre><!-- __LANG=%%__ -->
<h2 id="usage" permalink="usage">Usage</h2>
<p>Locales can be accessed in controllers/policies through <code>res.i18n()</code>, or in views through the <code>__(key)</code> or <code>i18n(key)</code> functions.
Remember that the keys are case sensitive and require exact key matches, e.g.</p>
<pre><code data-language="ejs">&lt;h1&gt; &lt;%= __(&apos;Welcome to PencilPals!&apos;) %&gt; &lt;/h1&gt;
&lt;h2&gt; &lt;%= i18n(&apos;Hello %s, how are you today?&apos;, &apos;Pencil Maven&apos;) %&gt; &lt;/h2&gt;
&lt;p&gt; &lt;%= i18n(&apos;That\&apos;s right-- you can use either i18n() or __()&apos;) %&gt; &lt;/p&gt;
</code></pre><!-- __LANG=%%__ -->
<h2 id="configuration" permalink="configuration">Configuration</h2>
<p>Localization/internationalization config can be found in <code>config/i18n.js</code>, from where you can set your supported locales.</p>
</docmeta>