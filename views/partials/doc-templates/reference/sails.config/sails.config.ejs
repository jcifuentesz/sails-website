<h1 id="configuration-sails-config-">Configuration (<code>sails.config</code>)</h1>
<p>The <code>sails.config</code> object contains the runtime values of your app&apos;s configuration. It is assembled automatically when Sails loads your app; merging together command-line arguments, environment variables, your <code>.sailsrc</code> file, and the configuration objects exported from any and all modules in your app&apos;s <a href="http://sailsjs.org/documentation/anatomy/myApp/config" target="_blank"><code>config/</code></a> directory.</p>
<p>More specifically, when you load your app, whether that&apos;s using <code>node app</code>, <a href="https://github.com/balderdashy/sails-docs/blob/master/PAGE_NEEDED.md" target="_blank">programmatic usage inside of a script</a>, or <a href="http://sailsjs.org/documentation/reference/cli/sailslift.html" target="_blank"><code>sails lift</code></a>, Sails will look in a <a href="https://github.com/dominictarr/rc#standards" target="_blank">few different places</a> for configuration.  Here they are listed in order of descending priority:</p>
<ul>
<li>an optional object of configuration overrides passed-in programmatically</li>
<li>a local <code>.sailsrc</code> file in your app&apos;s directory, or the first found looking in <code>../</code>, <code>../../</code> etc.</li>
<li>a global <code>.sailsrc</code> file in your home folder (e.g. <code>~/.sailsrc</code>)</li>
<li>command-line arguments (parsed by minimist)</li>
<li>environment variables (prefixed with <code>sails_</code>, using double underlines to indicate dots: e.g. <code>sails_port=1492</code>, <code>sails_models__connection=somePostgresqlServer</code>, and/or <code>sails_connections__somePostgresqlServer__password=l0lguyz</code>)</li>
<li>files in your app&apos;s <code>config/</code> directory (if one exists), with <code>config/local.js</code> taking priority.  Remember that, other than <code>local.js</code> (which takes priority), the file names are just for convention: the configuration you export from each file gets deep-merged together with everything else into one big dictionary (<code>sails.config</code>).</li>
</ul>
<blockquote>
<h4 id="the-recommended-solution-for-production" permalink="the-recommended-solution-for-production">The recommended solution for production</h4>
<p>Environment variables are one of the most powerful ways to configure your Sails app.  Since you can customize just about any setting (as long as it&apos;s JSON-serializable), this approach solves a number of problems, and is our core team&apos;s recommended strategy for production deployments.  Here are a few:</p>
<ul>
<li>Using environment variables means you don&apos;t have to worry about checking in your production database credentials, API tokens, etc.</li>
<li>This makes changing Postgresql hosts, Mailgun accounts, S3 credentials, and other maintenance straightforward, fast, and easy; plus you don&apos;t need to change any code or worry about merging in downstream commits from other people on your team</li>
<li>Depending on your hosting situation, you may be able to manage your production configuration through a UI (most PaaS providers like <a href="http://heroku.com" target="_blank">Heroku</a> or <a href="https://modulus.io" target="_blank">Modulus</a> support this, as does <a href="https://azure.microsoft.com/en-us/" target="_blank">Azure Cloud</a>.)</li>
</ul>
</blockquote>
<p><docmeta name="displayName" value="Configuration"></docmeta></p>
<docmeta name="stabilityIndex" value="3">
</docmeta>