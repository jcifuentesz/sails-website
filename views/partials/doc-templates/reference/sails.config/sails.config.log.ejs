<h1 id="sails-config-log">sails.config.log</h1>
<p>Configuration for the instance of the <a href="http://sailsjs.org/documentation/concepts/logging">Sails logger</a> (<code>sails.log</code>) used in your Sails app. The options are conventionally specified in the <a href="http://sailsjs.org/documentation/anatomy/myApp/config/log.js.html">config/log.js</a> configuration file.</p>
<h3 id="properties" permalink="properties">Properties</h3>
<table>
<thead>
<tr>
<th>Property</th>
<th>Type</th>
<th>Default</th>
<th>Details</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>level</code></td>
<td><bubble type="string" colors="true"></bubble></td>
<td><code>&apos;info&apos;</code></td>
<td>Set the level of detail to be shown in your app&apos;s log</td>
</tr>
<tr>
<td><code>inspect</code></td>
<td><bubble type="boolean" colors="true"></bubble></td>
<td><code>true</code></td>
<td>Set to false to disable captain&apos;s log&apos;s handling of logging, logs will instead be passed to the configured custom logger</td>
</tr>
<tr>
<td><code>custom</code></td>
<td><bubble type="object" colors="true"></bubble></td>
<td><code>undefined</code></td>
<td>Set to the instance of a custom logger (such as <a href="https://github.com/winstonjs/winston" target="_blank">winston</a>) logs will be passed through to the custom logger</td>
</tr>
</tbody>
</table>
<h3 id="using-a-custom-logger" permalink="using-a-custom-logger">Using a Custom Logger</h3>
<p>You can use a custom logger by disabling captain&apos;s log and providing a logger with similar methods that logs can be passed to. An example using <a href="https://github.com/winstonjs/winston" target="_blank">winston</a> defining both a console transport and file transport is below.</p>
<pre><code data-language="javascript">var winston = require(&apos;winston&apos;);
var customLogger = new winston.Logger();

// A console transport logging debug and above.
customLogger.add(winston.transports.Console, {
  level: &apos;debug&apos;,
  colorize: true
});

// A file based transport logging only errors formatted as json.
customLogger.add(winston.transports.File, {
  level: &apos;error&apos;,
  filename: &apos;filename.log&apos;,
  json: true
});

module.exports.log = {
  // Pass in our custom logger, and pass all log levels through.
  custom: customLogger,
  level: &apos;silly&apos;,

  // Disable captain&apos;s log so it doesn&apos;t prefix or stringify our meta data.
  inspect: false
};
</code></pre><!-- __LANG=%%__ -->
<docmeta name="displayName" value="sails.config.log">
</docmeta>