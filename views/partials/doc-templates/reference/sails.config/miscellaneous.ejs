<h1 id="miscellaneous-sails-config-">Miscellaneous (<code>sails.config.*</code>)</h1>
<p>For a conceptual overview of configuration in Sails, see <a href="http://sailsjs.org/documentation/concepts/Configuration">http://sailsjs.org/documentation/concepts/Configuration</a>.</p>
<p>This page is a quick reference of assorted configuration topics that don&apos;t fit elsewhere, namely top-level properties on the sails.config object.  Many of these properties are best set on a <a href="http://sailsjs.org/documentation/anatomy/myApp/config/env">per-environment basis</a>, or in your <a href="http://sailsjs.org/documentation/concepts/Configuration?q=the-config%2Flocaljs-file">config/local.js</a>.  To set them globally for your app, create a new file in the <code>config</code> folder (e.g. <code>config/misc.js</code>) and add them there.</p>
<h3 id="-sails-config-port-" permalink="sailsconfigport"><code>sails.config.port</code></h3>
<p>The <code>port</code> setting determines which TCP port your app will be deployed on.
Ports are a transport-layer concept designed to allow many different networking applications to run at the same time on a single computer.</p>
<p>By default, if it&#x2019;s set, Sails uses the <code>PORT</code> environment variable. Otherwise it falls back to port 1337. In production, you&#x2019;ll probably want to change this setting to 80 (http://) or 443 (https://) if you have an SSL certificate.</p>
<p>More about ports: <a href="http://en.wikipedia.org/wiki/Port_(computer_networking" target="_blank">http://en.wikipedia.org/wiki/Port_(computer_networking</a>)</p>
<h3 id="-sails-config-explicithost-" permalink="sailsconfigexplicithost"><code>sails.config.explicitHost</code></h3>
<p>By default, Sails will assume <code>localhost</code> as the host that will be listening for incoming requests.  This will work in the majority of hosting environments you encounter, but in some cases (<a href="http://www.openshift.com" target="_blank">OpenShift</a> being one example) you&apos;ll need to explicitly declare the host name of your Sails app.  Setting <code>explicitHost</code> tells Sails to listen for requests on that host instead of <code>localhost</code>.</p>
<h3 id="-sails-config-proxyhost-and-sails-config-proxyport-" permalink="sailsconfigproxyhost-and-sailsconfigproxyport"><code>sails.config.proxyHost</code> and <code>sails.config.proxyPort</code></h3>
<p>If your site will ultimately be served by a proxy, you may want to set <code>proxyHost</code> to ensure that calls to <code>sails.getBaseurl()</code> return the expected host.  For example, if you deploy a Sails app on <a href="http://modulus.io" target="_blank">Modulus.io</a>, the ultimate URL for your site will be something like <code>http://mysite-12345.onmodulus.net</code>.  If you were to use <code>sails.getBaseurl()</code> to construct a URL in your app code, however, it would return something like <code>http://localhost:8080</code>.  Using <code>proxyHost</code> and <code>proxyPort</code> allow you to specify the host name and port of the proxy server that will be serving your app.  This ensure that any links created using <code>sails.getBaseurl()</code> are correct.</p>
<h3 id="-sails-config-environment-" permalink="sailsconfigenvironment"><code>sails.config.environment</code></h3>
<blockquote>
<p><strong>Important</strong></p>
<p>The NODE_ENV environment variable is usually a better idea than setting <code>sails.config.environment</code> manually, since it&apos;s a generic Node convention.  The <code>sails.config.environment</code> setting may be deprecated in Sails v1.0.</p>
</blockquote>
<p>The runtime &#x201C;environment&#x201D; of your Sails app is either &#x2018;development&#x2019; or &#x2018;production&#x2019;.</p>
<p>In development, your Sails app will go out of its way to help you (for instance you will receive more descriptive error and debugging output).</p>
<p>In production, Sails configures itself (and its dependencies) to optimize performance.
You should always put your app in production mode before you deploy it to a server -- this helps ensure that your Sails app remains stable, performant, and scalable.</p>
<p>By default, Sails sets its environment using the <code>NODE_ENV</code> environment variable. If <code>NODE_ENV</code> is not set, Sails will run in the &#x2018;development&#x2019; environment.</p>
<h3 id="-sails-config-hooktimeout-" permalink="sailsconfighooktimeout"><code>sails.config.hookTimeout</code></h3>
<p>Set a global timeout for Sails hooks, in milliseconds.  Sails will give up trying to lift if any hook takes longer than this to load.  Defaults to <code>20000</code>.</p>
<h3 id="-sails-config-keepresponseerrors-" permalink="sailsconfigkeepresponseerrors"><code>sails.config.keepResponseErrors</code></h3>
<p>By default, convenience functions <code>badRequest</code>, <code>forbidden</code>, <code>notFound</code>, and <code>serverError</code> will clear the response body when the environment is &quot;production&quot;.  This behavior may be undesirable in certain cases, such as exposing underlying Waterline validation errors to clients while responding through <code>badRequest</code>.</p>
<p>Set <code>keepResponseErrors</code> to <code>true</code> to ensure Sails preserves the response body for these functions.</p>
<h3 id="-sails-config-ssl-" permalink="sailsconfigssl"><code>sails.config.ssl</code></h3>
<p>Use this config to set up basic SSL server options, or to indicate that you will be specifying more advanced options in <a href="http://sailsjs.org/documentation/reference/configuration/sails-config-http#?properties">sails.config.http.serverOptions</a>.</p>
<p>If <code>sails.config.ssl</code> is set, it should be an object with <code>key</code> and <code>cert</code> keys <em>or</em> a <code>pfx</code> key. The presence of those options indicates to Sails that your app should be lifted with an HTTPS server.  If your app requires a more complex SSL setup (for example by using <a href="https://nodejs.org/api/tls.html#tls_tls_createserver_options_secureconnectionlistener" target="_blank">SNICallback</a>), set <code>cert</code> and <code>key</code> to <code>true</code> and specify your advanced options in <a href="http://sailsjs.org/documentation/reference/configuration/sails-config-http#?properties">sails.config.http.serverOptions</a>.</p>
<docmeta name="displayName" value="sails.config.*">
</docmeta>