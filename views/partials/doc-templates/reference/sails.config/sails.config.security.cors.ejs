<h1 id="sails-config-security-cors">sails.config.security.cors</h1>
<p>Configuration for Sails&apos; <a href="http://sailsjs.org/documentation/concepts/CORS">built-in support for Cross-Origin Resource Sharing</a>.  CORS specifies how HTTP requests to your app originating from foreign domains should be treated.  It is primarily used to allow third-party sites to make AJAX requests to your app, which are normally blocked by browsers following the <a href="http://en.wikipedia.org/wiki/Same-origin_policy" target="_blank">same-origin policy</a>.</p>
<p>These options are conventionally set in the <strong>config/security.js</strong> configuration file.  Note that these settings (with the exception of <code>allRoutes</code>) can be changed on a per-route basis in the <a href="http://sailsjs.org/documentation/concepts/Routes/RouteTargetSyntax.html?q=route-target-options"><strong>config/routes.js</strong> file</a>.</p>
<h3 id="properties" permalink="properties">Properties</h3>
<table>
<thead>
<tr>
<th style="text-align:left">Property</th>
<th style="text-align:center">Type</th>
<th style="text-align:left">Default</th>
<th style="text-align:left">Details</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>allRoutes</code></td>
<td style="text-align:center"><bubble type="boolean" colors="true"></bubble></td>
<td style="text-align:left">false</td>
<td style="text-align:left">Indicates whether the other CORS configuration settings should apply to every route in the app by default.</td>
</tr>
<tr>
<td style="text-align:left"><code>allowOrigins</code></td>
<td style="text-align:center"><bubble type="array" colors="true"></bubble> or <bubble type="string" colors="true"></bubble></td>
<td style="text-align:left"><code>*</code></td>
<td style="text-align:left">Array of default hosts (beginning with http:// or https://) to give access to, or the string <code>*</code> to allow all domains CORS access.  If <code>allRoutes</code> is <code>true</code> and <code>origin</code> is <code>*</code>, then your app will be fully accessible to sites hosted on foreign domains (except for routes which have their own CORS settings).  If <code>credentials</code> is also <code>true</code>, then the app will fail to lift unless the <code>allowAnyOriginWithCredentialsUnsafe</code> setting is also <code>true</code> (see below).</td>
</tr>
<tr>
<td style="text-align:left"><code>allowRequestMethods</code></td>
<td style="text-align:center"><bubble type="string" colors="true"></bubble></td>
<td style="text-align:left">GET, POST, PUT, DELETE, OPTIONS, HEAD</td>
<td style="text-align:left">Comma-delimited list of methods that are allowed to be used in CORS requests.  This is only used in response to <a href="https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS#Preflighted_requests" target="_blank">preflight requests</a>, so the inclusion of GET, POST, OPTIONS and HEAD, although customary, is not necessary.</td>
</tr>
<tr>
<td style="text-align:left"><code>allowRequestHeaders</code></td>
<td style="text-align:center"><bubble type="string" colors="true"></bubble></td>
<td style="text-align:left">content-type</td>
<td style="text-align:left">Comma-delimited list of headers that are allowed to be sent with CORS requests.  This is only used in response to <a href="https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS#Preflighted_requests" target="_blank">preflight requests</a>.</td>
</tr>
<tr>
<td style="text-align:left"><code>allowResponseHeaders</code></td>
<td style="text-align:center"><bubble type="string" colors="true"></bubble></td>
<td style="text-align:left"><code>&apos;&apos;</code></td>
<td style="text-align:left">List of headers that browsers will be allowed to access.  See <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Access-Control-Expose-Headers" target="_blank">access-control-expose-headers</a>.</td>
</tr>
<tr>
<td style="text-align:left"><code>allowCredentials</code></td>
<td style="text-align:center"><bubble type="boolean" colors="true"></bubble></td>
<td style="text-align:left">false</td>
<td style="text-align:left">Indicates whether cookies can be shared in CORS requests.</td>
</tr>
<tr>
<td style="text-align:left"><code>allowAnyOriginWithCredentialsUnsafe</code></td>
<td style="text-align:center"><bubble type="boolean" colors="true"></bubble></td>
<td style="text-align:left">false</td>
<td style="text-align:left">Indicates whether <code>origin: &apos;*&apos;</code> and <code>allowCredentials: true</code> may be set at the same time.  This essentially negates the security benefits of browsers&apos; cross-origin policy, and should be used very carefully.</td>
</tr>
</tbody>
</table>
<h3 id="custom-route-config-example" permalink="custom-route-config-example">Custom route config example</h3>
<p>The following will allow cross-origin AJAX GET, PUT and POST requests to <code>/foo/bar</code> from sites hosted <code>http://foobar.com</code> and <code>https://owlhoot.com</code>.  DELETE requests, or requests from sites on any other domains, will be blocked by the browser.</p>
<pre><code data-language="javascript">&apos;/foo/bar&apos;: {
  action: &apos;foo/bar&apos;,
  cors: {
    allowOrigins: &apos;http://foobar.com,https://owlhoot.com&apos;,
    allowRequestMethods: &apos;GET,PUT,POST,OPTIONS,HEAD&apos;
  }
}
</code></pre><!-- __LANG=%%__ -->
<p><docmeta name="displayName" value="sails.config.security.cors"></docmeta></p>
<docmeta name="pageType" value="property">

</docmeta>