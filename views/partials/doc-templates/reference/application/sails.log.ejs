<h1 id="sails-log-">sails.log()</h1>
<p>Log a message or some data at the debug log level.</p>
<pre><code data-language="javascript">sails.log(...);
</code></pre><!-- __LANG=%%__ -->
<h3 id="usage" permalink="usage">Usage</h3>
<p>_This function accepts <a href="https://en.wikipedia.org/wiki/Variadic_function" target="_blank">any number</a> of arguments._</p>
<p>Usage of <code>sails.log()</code> is almost identical to that of <a href="https://nodejs.org/api/console.html#console_console_log_data" target="_blank"><code>console.log()</code></a> in Node core; including support for:</p>
<ul>
<li>an unlimited number of arguments</li>
<li>printf-style parameterization (a la <a href="https://nodejs.org/api/util.html#util_util_format_format" target="_blank"><code>util.format()</code></a>)</li>
<li>automatically inspecting non-string arguments (a la <a href="https://nodejs.org/api/util.html#util_util_inspect_object_options" target="_blank"><code>util.inspect()</code></a></li>
</ul>
<h4 id="returns" permalink="returns">Returns</h4>
<p><em>N/A</em></p>
<h3 id="example" permalink="example">Example</h3>
<pre><code data-language="javascript">var sum = +req.param(&apos;x&apos;) + +req.param(&apos;y&apos;);
sails.log();
sails.log(&apos;Hey %s, did you know that the sum of %d and %d is %d?&apos;, req.param(&apos;name&apos;), +req.param(&apos;x&apos;), +req.param(&apos;y&apos;), sum);
sails.log(&apos;Bet you didn\&apos;t know robots could do math, huh?&apos;);
sails.log();
sails.log(&apos;Anyways, here is a dictionary containing all the parameters I received in this request:&apos;, req.allParams());
sails.log(&apos;Until next time!&apos;);
return res.ok();
</code></pre><!-- __LANG=%%__ -->
<h3 id="notes" permalink="notes">Notes</h3>
<blockquote>
<ul>
<li>For a deeper conceptual exploration of logging in Sails, see <a href="http://sailsjs.org/documentation/concepts/logging" target="_blank">concepts/logging</a>.</li>
<li>The built-in logger in Sails is called internally by the framework, but also exposed as an alternative to calling <code>console.log()</code> directly.  Keep in mind that the Sails logger can be configured, or completely overridden using built-in log configuration settings (<a href="http://sailsjs.org/documentation/reference/configuration/sails-config-log" target="_blank"><code>sails.config.log</code></a>).</li>
<li>Keep in mind that, like any part of Sails, using <code>sails.log</code> is completely optional.  Most Sails apps take advantage of the built-in logger; while some users prefer to stick with <code>console.log()</code>, while still others <code>require()</code> more feature-rich libraries like <a href="https://www.npmjs.com/package/winston" target="_blank">Winston</a>. If you aren&apos;t sure what your app needs yet, start with the built-in logger and go from there.</li>
</ul>
</blockquote>
<docmeta name="displayName" value="sails.log()">
</docmeta>