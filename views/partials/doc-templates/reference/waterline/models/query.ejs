<h1 id="-query-">.query()</h1>
<p><code>.query()</code> is only available on Sails/Waterline models using a SQL database (PostgreSQL and mySQL) adapter.  Its purpose is to perform raw SQL queries.</p>
<h3 id="example" permalink="example">Example</h3>
<pre><code data-language="javascript">Pet.query(&apos;SELECT pet.name FROM pet&apos;, function(err, results) {
  if (err) return res.serverError(err);
  return res.json(results.rows);
});
</code></pre><!-- __LANG=%%__ -->
<h3 id="prepared-statement-example" permalink="prepared-statement-example">Prepared Statement Example</h3>
<pre><code data-language="javascript">Pet.query(&apos;SELECT pet.name FROM pet WHERE pet.name = ?&apos;,[ &quot;dog&quot; ]} ,function(err, results) {
  if (err) return res.serverError(err);
  return res.json(results.rows);
});
</code></pre><!-- __LANG=%%__ -->
<h3 id="notes" permalink="notes">Notes</h3>
<blockquote>
<p>This method only works with PostgreSQL and mySQL! use <a href="http://sailsjs.org/documentation/reference/waterline-orm/models/native"><code>.native()</code></a> for Mongo.</p>
<p>This method does not return a promise. <a href="http://stackoverflow.com/questions/21886630/how-to-use-model-query-with-promises-in-sailsjs-waterline" target="_blank">Refer here</a> to promisify .query().</p>
</blockquote>
<p><docmeta name="displayName" value=".query()"></docmeta></p>
<docmeta name="pageType" value="method">
</docmeta>