<h1 id="cross-origin-resource-sharing-cors-">Cross-Origin Resource Sharing (CORS)</h1>
<!--
Every Sails app comes ready to handle AJAX requests from a web page on the same domain.  But what if you need to handle AJAX requests
originating from other domains?
-->
<p><a href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing" target="_blank">CORS</a> is a mechanism that allows browser scripts on pages served from other domains (e.g. myothersite.com) to talk to your server (e.g. api.mysite.com).  Like <a href="https://en.wikipedia.org/wiki/JSONP" target="_blank">JSONP</a>, the goal of CORS is to circumvent the <a href="http://en.wikipedia.org/wiki/Same-origin_policy" target="_blank">same-origin policy</a>; allowing your Sails server to successfully respond to requests from client-side JavaScript code running on a page hosted from some other domain.  But unlike JSONP, it works with more than just GET requests.  And it allows you to whitelist particular origins (<code>staging.yoursite.com</code> or <code>yourothersite.net</code>) and prevent requests from others (<code>evil.com</code>).</p>
<p>Sails can be configured to allow cross-origin requests from a list of domains you specify, or from every domain.  This can be done on a per-route basis, or globally for every route in your app.</p>
<h3 id="enabling-cors" permalink="enabling-cors">Enabling CORS</h3>
<p>For security reasons, CORS is disabled by default in Sails.  But enabling it is dead-simple.</p>
<p>To allow cross-origin requests from a whitelist of trusted domains to <em>any</em> route in your app, simply enable <code>allRoutes</code> and provide an <code>origin</code> setting in <a href="http://sailsjs.com/docs/reference/configuration/sails-config-cors"><code>config/cors.js</code></a>:</p>
<pre><code data-language="javascript">allRoutes: true,
allowOrigins: [&apos;http://example.com&apos;,&apos;https://api.example.com&apos;,&apos;http://blog.example.com:1337&apos;,&apos;https://foo.com:8888&apos;]
</code></pre><!-- __LANG=%%__ -->
<p>To allow cross-origin requests from <em>any</em> domain to <em>any</em> route in your app, use <code>allowOrigins: &apos;*&apos;</code>:</p>
<pre><code data-language="javascript">allRoutes: true,
allowOrigins: &apos;*&apos;,
allowCredentials: false
</code></pre><!-- __LANG=%%__ -->
<p>Note that when using <code>allowOrigins: &apos;*&apos;</code>, the <code>credentials</code> setting <em>must</em> be <code>false</code>, meaning that requests containing cookies will be blocked.  This restriction exists to prevent third-party sites from being able to trick your logged-in users into making unauthorized requests to your app.  You can lift this restriction (at your own risk!) using the <a href="http://sailsjs.com/docs/reference/configuration/sails-config-security-cors"><code>allowAnyOriginWithCredentialsUnsafe</code></a> setting.</p>
<p>See <a href="http://sailsjs.com/docs/reference/configuration/sails-config-security-cors"><code>sails.config.security.cors</code></a> for a comprehensive reference of all available options.</p>
<h3 id="configuring-cors-for-individual-routes" permalink="configuring-cors-for-individual-routes">Configuring CORS For individual routes</h3>
<p>Besides the global CORS configuration in <code>config/security.js</code>, you can also configure these settings on a per-route basis in <a href="http://sailsjs.com/anatomy/config/routes-js"><code>config/routes.js</code></a>.</p>
<p>If you set <code>allRoutes: true</code> in <code>config/cors.js</code>, but you want to exempt a specific route, set the <code>cors: false</code> in the route&apos;s target:</p>
<pre><code data-language="javascript">&apos;POST /signup&apos;: {
   action: &apos;user/signup&apos;,
   cors: false
}
</code></pre><!-- __LANG=%%__ -->
<p>To enable or override global CORS configuration for a particular route, provide <code>cors</code> as a dictionary:</p>
<pre><code data-language="javascript">&apos;GET /videos&apos;: {
   action: &apos;video/find&apos;,
   cors: {
     allowOrigins: [&apos;http://example.com&apos;,&apos;https://api.example.com&apos;,&apos;http://blog.example.com:1337&apos;,&apos;https://foo.com:8888&apos;],
     allowCredentials: false
   }
}
</code></pre><!-- __LANG=%%__ -->
<h3 id="notes" permalink="notes">Notes</h3>
<blockquote>
<ul>
<li>CORS support is only relevant for HTTP requests.  Requests made via sockets are not subject to cross-origin restrictions.  To ensure that your app is secure via sockets, you can define an <code>authorization</code> function in <a href="http://sailsjs.org/documentation/anatomy/myApp/config/sockets.js.html"><code>config/sockets.js</code></a>.</li>
<li>CORS is not supported in Internet Explorer 7.  Fortunately, it is supported in IE8 and up, as well as in all other modern browsers.</li>
<li>Read <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS" target="_blank">more about CORS from MDN</a></li>
<li>Read the <a href="https://www.w3.org/TR/cors/" target="_blank">CORS spec</a></li>
</ul>
</blockquote>
<docmeta name="displayName" value="CORS">
</docmeta>